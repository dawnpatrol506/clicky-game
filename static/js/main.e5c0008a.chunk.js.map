{"version":3,"sources":["components/Nav.js","components/Banner.js","components/Image.js","components/Board.js","App.js","index.js"],"names":["Nav","props","react_default","a","createElement","className","href","Banner","Image","onClick","src","alt","Board","ClickHandler","images","map","image","i","components_Image","key","name","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","imageClickHandler","event","newImages","state","forEach","target","isClicked","harrassPlayer","resetGame","plusOne","currentScore","setState","isWon","topScore","shuffleImages","resetisClicked","alert","length","rando","Math","floor","random","push","splice","winClickHandler","displayImages","components_Board","components_Nav","components_Banner","value","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.e5c0008a.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nfunction Nav(props){\r\n    return(\r\n        <nav>\r\n            <div className=\"nav-wrapper blue darken-3\">\r\n                <a href=\"/\" className=\"brand-logo center\">Clicky Game!</a>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Nav;","import React from 'react';\r\n\r\nfunction Banner(){\r\n    return(\r\n        <div className=\"flow center\">\r\n            <h1>Clicky Game!</h1>\r\n            <h3>Click on an image to earn points, but don't click on any images more than once!</h3>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Banner;","import React from 'react';\r\n\r\nfunction Image(props){\r\n    return(\r\n        <div className=\"col s4\" onClick={props.onClick}>\r\n            <div className=\"card\">\r\n                <div className=\"card-image\">\r\n                    <img src={props.src} alt={props.alt}/>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Image;\r\n","import React from 'react';\r\nimport Image from './Image';\r\n\r\nconst Board = function(props){\r\n    return(\r\n        <div className=\"row\" onClick={props.ClickHandler}>\r\n            {props.images.map((image, i) => {\r\n            return <Image key={props.images[i].name} src={props.images[i].src} alt={props.images[i].name} onClick={props.onClick} /> })}      \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Board;","import React, { Component } from 'react';\nimport Nav from './components/Nav';\nimport Banner from './components/Banner';\nimport Board from './components/Board';\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    this.state = {\n      currentScore: 0,\n      isWon: false,\n      topScore: 0,\n      images: [\n        {\n          src: './assets/images/bart.png',\n          isClicked: false,\n          name: 'bart'\n        },\n        {\n          src: './assets/images/lisa.png',\n          isClicked: false,\n          name: 'lisa'\n        },\n        {\n          src: './assets/images/bob.jpg',\n          isClicked: false,\n          name: 'bob'\n        },\n        {\n          src: './assets/images/homer.jpg',\n          isClicked: false,\n          name: 'homer'\n        },\n        {\n          src: './assets/images/apu.jpg',\n          isClicked: false,\n          name: 'apu'\n        },\n        {\n          src: './assets/images/maggie.png',\n          isClicked: false,\n          name: 'maggie'\n        },\n        {\n          src: './assets/images/marge.png',\n          isClicked: false,\n          name: 'marge'\n        },\n        {\n          src: './assets/images/jeff.png',\n          isClicked: false,\n          name: 'jeff'\n        },\n        {\n          src: './assets/images/stu.png',\n          isClicked: false,\n          name: 'stu'\n        },\n        {\n          src: './assets/images/kent.jpg',\n          isClicked: false,\n          name: 'kent'\n        },\n        {\n          src: './assets/images/doris.jpg',\n          isClicked: false,\n          name: 'doris'\n        },\n        {\n          src: './assets/images/wiggum.jpg',\n          isClicked: false,\n          name: 'wiggum'\n        }\n\n\n      ]\n    };\n  }\n\n  imageClickHandler = (event) => {\n    let newImages = this.state.images;\n    newImages.forEach(image => {\n      if(image.name === event.target.alt){\n        if(image.isClicked === true){\n          this.harrassPlayer();\n          this.resetGame();\n        }\n        else{\n          image.isClicked = true;\n          let plusOne = this.state.currentScore + 1;\n          if(plusOne === 12){\n            this.setState({\n              isWon: true,\n              currentScore: 0,\n              topScore: 12\n            })\n          }\n          else{\n            this.setState({currentScore: plusOne});\n          }\n        }\n      }\n    })\n    newImages = this.shuffleImages(newImages);\n    this.setState({images: newImages});\n  }\n\n  resetGame = () => {\n    let newImages = this.resetisClicked(this.state.images);\n    this.setState({images: newImages});\n\n    if(this.state.currentScore > this.state.topScore){\n      let topScore = this.state.currentScore;\n      this.setState({\n        images: newImages,\n        topScore: topScore,\n        currentScore: 0\n      })\n    }\n    else{\n      this.setState({\n        images: newImages,\n        currentScore: 0\n      })\n    }\n  } \n\n  harrassPlayer = () => {\n    alert('You Lose!')\n  }\n\n  resetisClicked = (images) => {\n    let newImages = images;\n    newImages.forEach(image => image.isClicked = false);\n    return newImages;\n  }\n\n  shuffleImages = function(images){\n    let newImages = [];\n    for(let i = images.length; i > 0; i--){\n    let rando = Math.floor(Math.random() * i);\n    newImages.push(images.splice(rando, 1)[0]);}\n    return newImages;\n  }\n\n  winClickHandler = () =>{\n    this.resetGame();\n    this.setState({isWon: false})\n  }\n\n  displayImages = () => {\n    if(!this.state.isWon){\n      return(\n        <Board images={this.state.images} onClick={this.imageClickHandler} />\n      )\n    }\n    else{\n      return(\n        <div className=\"row\">\n        <h1>YOU WIN!</h1>\n        <button className=\"btn btn-medium\" onClick={this.winClickHandler}>Play Again?</button>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"App\">\n        <Nav />\n        <Banner />\n        <div className=\"container\">\n          <div className=\"row\">\n            <p>Current Score: {this.state.currentScore}</p>\n            <p>Top Score: {this.state.topScore}</p>\n          </div>\n          <div className=\"row\" value={this.state.isWon}>\n            {this.displayImages()}\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}